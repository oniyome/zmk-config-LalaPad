#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_MOVE_VAL 3500 // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100  // default: 10 -> 100 -> 10 -> 5 -> 1 ->20->100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            //       <&zip_scroll_scaler 1 8>;,
            <&zip_scroll_scaler 1 64>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

&lt { tapping-term-ms = <140>; };

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <140>;
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };

        volume_up_down: behavior_sensor_rotate_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            quick-tap-ms = <140>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        my_caps_word: my_caps_word {
            compatible = "zmk,behavior-caps-word";
            label = "MY_CAPS_WORD";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            continue-list = <MINUS>;
        };
    };

    macros {
        esc_2: esc_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt ESC>, <&macro_wait_time 300>, <&kp ESC>;

            label = "ESC_2";
        };

        obs_next_line: obs_next_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt ESC &kp I &kp ENTER &kp ESC &kp UP &kp END>;
            label = "OBS_NEXT_LINE";
        };

        obs_fix: obs_fix {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp ESC &kp ESC &kp DOWN &kp HOME>;
            label = "OBS_FIX";
        };

        toka: toka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp O &kp K &kp A &kp UNDER &kp N0 &kp N0 &kp N9 &kp N2 &kp N1 &kp RET>;
            label = "TOKA";
        };

        telegram: telegram {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LGUI>,
                <&macro_wait_time 400>,
                <&kp T &kp E &kp L &kp E &kp G &kp R &kp A &kp M &kp RET>;

            label = "TELEGRAM";
        };

        skype: skype {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&kp S &kp K &kp Y &kp P &kp E &kp RET>;

            label = "SKYPE";
        };

        wechat: wechat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&kp W &kp E &kp C &kp H &kp A &kp T &kp RET>;

            label = "WECHAT";
        };

        snippet: snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LGUI>,
                <&macro_wait_time 200>,
                <&kp S &kp N &kp I &kp P &kp P &kp E &kp T &kp RET>;

            label = "SNIPPET";
        };

        gmail_clear: gmail_clear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp ESC &kp G &kp I &kp G &kp I>;
            label = "GMAIL_CLEAR";
        };

        obs_insert: obs_insert {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp ESC &kp A &kp LC(SPACE)>;
            label = "OBS_INSERT";
        };

        obs_space: obs_space {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp I &kp SPACE &kp ESC>;
            label = "OBS_SPACE";
        };
    };

    combos {
        compatible = "zmk,combos";

        kanji {
            bindings = <&kp LC(SPACE)>;
            key-positions = <39 44>;
        };

        ins_kanji {
            bindings = <&obs_insert>;
            key-positions = <40 43>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;

            bindings = <
&mt LWIN ESC           &mt LALT Q    &kp W         &kp E            &kp R                    &kp T          &kp Y          &kp U        &kp I            &kp O       &kp P                &esc_2
&mt LG(TAB) TAB        &mt2 LSHFT A  &kp S         &kp D            &kp F                    &kp G          &kp H          &kp J        &kp K            &kp L       &mt LSHFT MINUS      &obs_fix
&mt LA(SPACE) LA(TAB)  &kp Z         &kp X         &kp C            &kp V                    &kp B          &kp N          &kp M        &kp COMMA        &kp PERIOD  &mt LS(SLASH) SLASH  &kp LA(SPACE)
&caps_word             &kp LEFT_WIN  &kp LEFT_ALT  &mt LCTRL ENTER  &lt SECONDARY_LAYER DEL  &mkp MB1       &mkp MB2       &mo 2        &lt 3 SPACE      &to 2       &mo 7                &kp LC(SPACE)
                                     &allow_end    &allow_pagedown  &allow_home              &allow_pageup  &allow_pageup  &allow_home  &allow_pagedown  &allow_end
            >;
        };

        SECONDARY_LAYER {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;

            bindings = <
&caps_word  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)             &kp LS(NUMBER_5)               &kp EQUAL            &mt AMPS N7         &mt ASTERISK N8  &mt LEFT_PARENTHESIS N9  &kp PLUS              &kp ASTERISK
&kp LC(N1)  &kp F2            &kp F4            &kp F6            &kp LEFT_PARENTHESIS         &kp RIGHT_PARENTHESIS          &mt SEMICOLON COLON  &mt DOLLAR N4       &mt PERCENT N5   &mt CARET N6             &mt UNDERSCORE MINUS  &kp SLASH
&trans      &trans            &trans            &kp LS(F10)       &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET  &kp N0               &mt EXCLAMATION N1  &mt AT_SIGN N2   &mt HASH N3              &trans                &trans
&trans      &trans            &trans            &trans            &trans                       &kp LC(N1)                     &trans               &obs_insert         &obs_space       &kp KP_NUMBER_0          &dot_comma            &kp KP_ENTER
                              &trans            &trans            &trans                       &trans                         &trans               &trans              &trans           &trans
            >;
        };

        TERTIARY_LAYER {
            display-name = "tertiary_layer";
            bindings = <
&trans  &kp CARET      &mkp MB1                        &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP    &kp LA(LEFT)  &gmail_clear  &kp K_APP  &trans         &kp TILDE          &kp LA(RIGHT)
&trans  &kp GRAVE      &mmv MOVE_LEFT                  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(N1)      &kp LEFT      &kp DOWN      &kp UP     &allow_end     &obs_next_line     &trans
&trans  &mt PIPE BSLH  &mt SINGLE_QUOTE DOUBLE_QUOTES  &mkp MB3        &trans           &msc SCRL_DOWN  &kp HOME      &kp END       &kp PG_UP  &kp PAGE_DOWN  &kp LC(SEMICOLON)  &trans
&trans  &trans         &trans                          &kp LA(ENTER)   &kp LC(ENTER)    &trans          &trans        &trans        &trans     &to 0          &trans             &trans
                       &trans                          &trans          &trans           &trans          &trans        &trans        &trans     &trans
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&scroll_up_down>, <&volume_up_down>;

            bindings = <
&trans           &kp LC(LS(S))  &kp LC(LS(TAB))  &kp LC(TAB)        &kp LC(LS(A))  &kp LC(LS(T))      &kp LC(N9)  &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)
&kp PRINTSCREEN  &trans         &kt LC(PAGE_UP)  &kp LC(PAGE_DOWN)  &kt LC(LS(D))  &kp LC(BACKSLASH)  &trans      &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)
&trans           &trans         &kp LA(UP)       &kp LA(DOWN)       &kp F10        &trans             &snippet    &telegram   &skype      &wechat     &trans      &toka
&trans           &trans         &trans           &trans             &trans         &trans             &trans      &trans      &trans      &trans      &trans      &trans
                                &trans           &trans             &trans         &trans             &trans      &trans      &trans      &trans
            >;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans  &trans  &mkp MB1        &mmv MOVE_UP    &mkp MB2         &trans  &trans  &trans  &trans     &trans     &trans     &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo SCROLL_R_LAYER
&trans  &trans  &trans          &mkp MB3        &trans           &trans  &trans  &trans  &mkp MB4   &mkp MB5   &trans     &trans
&trans  &trans  &trans          &mo 5           &trans           &trans  &trans  &trans  &trans     &trans     &trans     &trans
                &trans          &trans          &trans           &trans  &trans  &trans  &trans     &trans
            >;

            sensor-bindings = <&scroll_up_down>, <&scroll_up_down>;
        };

        SCROLL_R_LAYER {
            display-name = "scroll_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE_L_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&trans              &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&mo SCROLL_R_LAYER  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans     &mkp MB5   &mkp MB4   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                               &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans          &trans        &trans          &trans
                &trans  &trans  &trans  &trans  &trans        &trans        &trans          &trans
            >;
        };
    };
};
