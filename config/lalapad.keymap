#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define SYSTEM_LAYER    3
#define MOUSE_R_LAYER   4
#define SCROLL_R_LAYER  5
#define MOUSE_L_LAYER   6
#define SCROLL_L_LAYER  7

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        scroll_down_up: behavior_sensor_rotate_mouse_wheel_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        scroll_left_right: behavior_sensor_rotate_mouse_wheel_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
        };

        volume_up_down: behavior_sensor_rotate_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        ESCx2: ESCx2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp ESCAPE>;
            label = "ESCX2";
        };

        obs_fix: obs_fix {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp ESCAPE &kp ESCAPE &kp DOWN &kp HOME>;
            label = "OBS_FIX";
        };

        obs_A: obs_A {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp ESCAPE &kp A &kp LC(SPACE)>;
            label = "OBS_A";
        };

        obs_SPC: obs_I {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp I &kp SPACE &kp ESCAPE &kp>;
            label = "OBS_I";
        };

        gmail_clear: gmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp ESCAPE &kp G &kp I &kp G &kp I>;
            label = "GMAIL";
        };

        obs_nextlilne: obs_nextlilne {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp I &kp ENTER &kp ESC &kp UP &kp END>;
            label = "OBS_NEXTLILNE";
        };

        m_toka: m_toka {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp O &kp K &kp A &kp UNDER &kp N0 &kp N0 &kp N9 &kp N2 &kp N1 &kp ENTER>;
            label = "M_TOKA";
        };

        m_telegram: m_telegram {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kt LWIN>,
                <&macro_wait_time 300>,
                <&kp T &kp E &kp L &kp E &kp G &kp R &kp A &kp M &kp RET>;

            label = "M_TELEGRAM";
        };

        m_skype: m_skype {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kt LWIN>,
                <&macro_wait_time 300>,
                <&kp S &kp K &kp Y &kp P &kp E &kp ENTER>;

            label = "M_SKYPE";
        };

        m_wechat: m_wechat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kt LWIN>,
                <&macro_wait_time 300>,
                <&kp W &kp E &kp C &kp H &kp A &kp T &kp RET>;

            label = "M_WECHAT";
        };

        m_snippet: m_snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kt LWIN>,
                <&macro_wait_time 300>,
                <&kp S &kp N &kp I &kp P &kp P &kp E &kp T &kp RET>;

            label = "M_SNIPPET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_down_up>, <&scroll_up_down>;

            bindings = <
&kp ESC                &kp Q         &kp W                 &kp E            &kp R                    &kp T          &kp Y          &kp U            &kp I            &kp O       &kp P             &ESCx2
&trans                 &mt LSHFT A   &kp S                 &kp D            &kp F                    &kp G          &kp H          &kp J            &kp K            &kp L       &mt LSHFT MINUS   &obs_fix
&mt LA(SPACE) LA(TAB)  &mt LC(Z) Z   &mt LC(X) X           &mt LC(C) C      &mt LC(V) V              &mt LC(B) B    &kp N          &kp M            &kp COMMA        &kp PERIOD  &mt LS(UP) SLASH  &kp LA(SPACE)
&kp CAPS               &kp LEFT_WIN  &mt LEFT_ALT LG(TAB)  &mt LCTRL ENTER  &lt SECONDARY_LAYER DEL  &mkp MB1       &mkp MB2       &lt 2 BACKSPACE  &lt 3 SPACE      &kp LEFT    &kp DOWN          &mo 7
                                     &allow_end            &allow_pagedown  &allow_home              &allow_pageup  &allow_pageup  &allow_home      &allow_pagedown  &allow_end
            >;
        };

        SECONDARY_LAYER {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;

            bindings = <
&trans      &kp LS(EXCLAMATION)  &kp LS(AT_SIGN)  &kp HASH     &kp LS(DOLLAR)               &kp LS(PERCENT)                &kp EQUAL            &mt LS(N7) N7                 &mt LS(N8) N8             &mt LS(N9) N9              &kp PLUS   &kp ASTERISK
&trans      &kp F2               &kp F4           &kp F6       &kp LPAR                     &kp RIGHT_PARENTHESIS          &mt SEMICOLON COLON  &mt LS(DOLLAR) NUMBER_4       &mt LS(PERCENT) N5        &mt LS(NUMBER_6) NUMBER_6  &kp MINUS  &kp SLASH
&kp LC(F6)  &trans               &trans           &kp LS(F10)  &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET  &kp N0               &mt LS(EXCLAMATION) NUMBER_1  &mt LS(AT_SIGN) NUMBER_2  &mt HASH NUMBER_3          &trans     &trans
&trans      &trans               &trans           &trans       &trans                       &trans                         &trans               &obs_A                        &obs_SPC                  &trans                     &trans     &trans
                                 &trans           &trans       &trans                       &trans                         &trans               &trans                        &trans                    &trans
            >;
        };

        TERTIARY_LAYER {
            display-name = "tertiary_layer";
            bindings = <
&trans  &kp CARET             &mkp MB1               &mmv MOVE_UP    &mkp MB2         &msc SCRL_UP      &kp LA(LEFT)  &gmail_clear  &kp K_APP    &trans         &kp TILDE          &kp LA(RIGHT)
&trans  &kp TILDE             &mmv MOVE_LEFT         &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(NUMBER_1)  &kp LEFT      &kp DOWN      &kp UP       &kp RIGHT      &obs_nextlilne     &trans
&trans  &kp NON_US_BACKSLASH  &mt SQT DOUBLE_QUOTES  &mkp MB3        &trans           &msc SCRL_DOWN    &kp HOME      &kp END       &kp PAGE_UP  &kp PAGE_DOWN  &kp LC(SEMICOLON)  &trans
&trans  &trans                &trans                 &kp LA(ENTER)   &kp LC(ENTER)    &trans            &trans        &trans        &trans       &trans         &trans             &trans
                              &trans                 &trans          &trans           &trans            &trans        &trans        &trans       &trans
            >;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&scroll_down_up>, <&volume_up_down>;

            bindings = <
&trans               &kp LC(LS(S))  &kp LC(LS(TAB))  &kp LC(TAB)        &kt LC(LS(A))  &kt LC(LS(T))          &kt LC(NUMBER_9)  &kt LC(NUMBER_1)  &kt LC(NUMBER_2)  &kt LC(NUMBER_3)  &kt LC(NUMBER_4)  &kt LC(NUMBER_5)
&kp PRINTSCREEN      &trans         &kt LC(PG_UP)    &kt LC(PAGE_DOWN)  &kt LC(LS(D))  &kt LC(LS(BACKSLASH))  &trans            &kt LG(NUMBER_1)  &kt LG(NUMBER_2)  &kt LG(NUMBER_3)  &kt LG(NUMBER_4)  &kt LG(NUMBER_5)
&kp LG(PRINTSCREEN)  &trans         &kt LA(UP)       &kt LA(DOWN)       &kt F10        &trans                 &m_snippet        &m_telegram       &m_skype          &m_wechat         &trans            &m_toka
&trans               &trans         &trans           &trans             &trans         &trans                 &trans            &trans            &trans            &trans            &trans            &trans
                                    &trans           &trans             &trans         &trans                 &trans            &trans            &trans            &trans
            >;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp A   &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo SCROLL_R_LAYER
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB4   &mkp MB5   &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };

        SCROLL_R_LAYER {
            display-name = "scroll_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE_L_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&trans              &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&mo SCROLL_R_LAYER  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans     &mkp MB5   &mkp MB4   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans              &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                               &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans          &trans        &trans          &trans
                &trans  &trans  &trans  &trans  &trans        &trans        &trans          &trans
            >;
        };
    };
};
